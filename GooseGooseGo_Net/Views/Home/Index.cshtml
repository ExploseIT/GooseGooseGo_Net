

@using GooseGooseGo_Net
@using GooseGooseGo_Net.Services
@using GooseGooseGo_Net.ef

    @{
    ViewData["Title"] = "Home Page";
    mApp _m_App = @Model;
    }

<div class="container text-center">
  <div class="row">
    <div class="col text-start">
      <b>Kraken USD asset count <span class="text-primary" id="span_kraken_item_count"></span></b>
    </div>
    <div class="col">
      <b>Date / time <span class="text-primary" id="span_kraken_date_time"></span></b>
    </div>
    <div class="col">
    &nbsp;
    </div>
        <div class="col">
            &nbsp;
        </div>
  </div>
</div>

<table id="tab_kps">
    <thead>
         <tr>
            <th>Pair</th>
            <th>Price</th>
            <th>% change</th>
        </tr>
    </thead>

    <tbody id="tb_kps">

    </tbody>
</table>

<script>

    $(document).ready(function () {
        setUrlBase("@Html.Raw(_m_App.mUrl)");
        doInit();
        pollDataRead(); // Start polling
        
        console.log("Home/Index.cshtml loaded");
        });

    function pollDataRead() {
        doDataRead();
        setTimeout(pollDataRead, 10000); // Schedule next poll after 10s
    }

        function doInit() {
            // Initialization code here
            doDataRead();
        }


    function doDataRead() {
        let p_kps = {
            kapsMinSwing: 0.010,
            kapsPeriodValue:  5,
            kapsPeriodUnit:  "minute",
            kapsRowCount: 20,
            kapsPeriodOffset:  0
            };
        
        doApiPost(doDataReadContinueSwingList, p_kps, "api/doKrakenPercentageSwingList");
    }

    var l_kps = null;
    var l_k_info = null;

    function doDataReadContinueSwingList(ret) {
        l_kps = ret.data.apiData;
        doApiPost(doDataReadContinueInfoList, null, "api/doKrakenInfoList");
    }

    function doDataReadContinueInfoList(ret) {
            // Continuation code here
            let l_k_info = ret.data.apiData;
            $("#span_kraken_item_count").text(l_k_info.length);
            let dt = l_k_info[0].kaRetrievedAt;
            let dtStr = dt.replace('T', ' ');
            $("#span_kraken_date_time").text(dtStr);
            $("#tb_kps").empty();
            
            if (l_kps != null) {
                for (let i = 0; i < l_kps.length; i++) {
                    let kp = l_kps[i];
                    let tr = $("<tr></tr>");
                    let td_pair = $("<td></td>").text(kp.kapsPair);
                    let td_price = $("<td></td>").text(kp.kapsEndTrade+ " USD");
                    let td_change = $("<td></td>").text((kp.kapsTradeDiffPercent).toFixed(2) + "%");
                    tr.append(td_pair);
                    tr.append(td_price);
                    tr.append(td_change);
                    $("#tb_kps").append(tr);
                }
            }
    }
</script>


