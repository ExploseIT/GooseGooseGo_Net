

@using GooseGooseGo_Net
@using GooseGooseGo_Net.Services
@using GooseGooseGo_Net.ef

    @{
    ViewData["Title"] = "Home Page";
    mApp _m_App = @Model;
    }

<div class="container text-center">
  <div class="row">
    <div class="col text-start">
      <b>USD/USDT asset count <span class="text-primary" id="span_asset_item_count"></span></b>
    </div>
    <div class="col">
      <b>Date / time <span class="text-primary" id="span_asset_date_time"></span></b>
    </div>
    <div class="col">
    &nbsp;
    </div>
        <div class="col">
            &nbsp;
        </div>
  </div>
</div>
<div class="row">
    <div class="col-5">
    <div class="col-12">Up Swing</div>
        <table id="tab_aps_up" class="col-12">
        <thead>
             <tr>
                <th>Exchange</th>
                <th>Pair</th>
                <th>Price</th>
                <th>% change</th>
            </tr>
        </thead>

        <tbody id="tb_aps_up">

        </tbody>
    </table>
    </div>
    <div class="col-5">
        <div class="col-12">Down Swing</div>
        <table id="tab_aps_down" class="col-12">
            <thead>
                <tr>
                    <th>Exchange</th>
                    <th>Pair</th>
                    <th>Price</th>
                    <th>% change</th>
                </tr>
            </thead>

            <tbody id="tb_aps_down">
            </tbody>
        </table>
    </div>
</div>
<script>

    $(document).ready(function () {
        setUrlBase("@Html.Raw(_m_App.mUrl)");
        doInit();
        pollDataRead(); // Start polling
        
        console.log("Home/Index.cshtml loaded");
        });

    function pollDataRead() {
        doDataRead();
        setTimeout(pollDataRead, 10000); // Schedule next poll after 10s
    }

        function doInit() {
            // Initialization code here
            doDataRead();
        }


    function doDataRead() {
        let p_aps_up = {
            aspspUpSwing: true,
            aspspMinSwing: 0.010,
            aspspPeriodValue:  5,
            aspspPeriodUnit:  "minute",
            aspspRowCount: 20,
            aspspPeriodOffset:  0
            };
        
        doApiPost(doContinueSwingListUp, p_aps_up, "api/doAssetPercentageSwingList");
    }

    var l_aps_up = null;
    var l_aps_down = null;
    var l_a_info = null;

    function doContinueSwingListUp(ret) {
        l_aps_up = ret.data.apiData;
        let p_aps_down = {
            aspspUpSwing: false,
            aspspMinSwing: 0.010,
            aspspPeriodValue:  5,
            aspspPeriodUnit:  "minute",
            aspspRowCount: 20,
            aspspPeriodOffset:  0
            };

        doApiPost(doContinueSwingListDown, p_aps_down, "api/doAssetPercentageSwingList");
    }

    function doContinueSwingListDown(ret) {
        l_aps_down = ret.data.apiData;
        doApiPost(doContinueInfoList, null, "api/doAssetInfoList");
    }

    function doContinueInfoList(ret) {
            // Continuation code here
            l_a_info = ret.data.apiData;
            $("#span_asset_item_count").text(l_a_info.length);
            let dt = l_a_info[0].assRetrievedAt;
            let dtStr = dt.replace('T', ' ');
            $("#span_asset_date_time").text(dtStr);
            $("#tb_aps_up").empty();
            
            if (l_aps_up != null) {
                for (let i = 0; i < l_aps_up.length; i++) {
                    let ap = l_aps_up[i];
                    let tr = $("<tr></tr>");
                    let td_exchange = $("<td></td>").text(ap.asspsExchangeFullName);
                    let td_pair = $("<td></td>").text(ap.asspsPair);
                    let td_price = $("<td></td>").text(ap.asspsEndTrade+ " USD");
                    let td_change = $("<td></td>").text((ap.asspsTradeDiffPercent).toFixed(2) + "%");
                    tr.append(td_exchange);
                    tr.append(td_pair);
                    tr.append(td_price);
                    tr.append(td_change);
                    $("#tb_aps_up").append(tr);
                }
            }

            $("#tb_aps_down").empty();

            if (l_aps_down != null) {
                for (let i = 0; i < l_aps_down.length; i++) {
                    let ap = l_aps_down[i];
                    let tr = $("<tr></tr>");
                    let td_exchange = $("<td></td>").text(ap.asspsExchangeFullName);
                    let td_pair = $("<td></td>").text(ap.asspsPair);
                    let td_price = $("<td></td>").text(ap.asspsEndTrade+ " USD");
                    let td_change = $("<td></td>").text((ap.asspsTradeDiffPercent).toFixed(2) + "%");
                    tr.append(td_exchange);
                    tr.append(td_pair);
                    tr.append(td_price);
                    tr.append(td_change);
                    $("#tb_aps_down").append(tr);
                }
            }
    }
</script>


